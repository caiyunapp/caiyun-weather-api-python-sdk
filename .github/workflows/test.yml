# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: "test"

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  unittest:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        include:
          - name: 3.8
            os: ubuntu-latest
            python-version: 3.8
            experimental: false
          - name: 3.9
            os: ubuntu-latest
            python-version: 3.9
            experimental: false
          - name: 3.10
            os: ubuntu-latest
            python-version: "3.10"
            experimental: false
          - name: 3.11
            os: ubuntu-latest
            python-version: "3.11"
            experimental: false

    steps:
      - uses: actions/checkout@v3

      - name: set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get pip cache directory
        id: pip-cache
        run: echo "::set-output name=dir::$(pip cache dir)"

      - name: Install poetry
        uses: snok/install-poetry@v1.3.3
        with:
          virtualenvs-create: false

      - name: Restore pip cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: pip-poetry-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Run Lints
        run: |
          flake8 .
          black --check .
          isort --check .

      - name: Run Tests & Report coverage percent
        run: |
          coverage run
          coverage report
